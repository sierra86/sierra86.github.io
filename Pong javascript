<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pong Game</title>
    <style>
        canvas {
            background-color: #000;
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <canvas></canvas>
    <script>
        var DIRECTION = {
            IDLE: 0,
            UP: 1,
            DOWN: 2,
            LEFT: 3,
            RIGHT: 4
        };

        var rounds = [5, 5, 3, 3, 2];
        var colors = ['#1abc9c', '#2ecc71', '#3498db', '#e74c3c', '#9b59b6'];

        var Paddle = {
            create: function (side) {
                return {
                    width: 18,
                    height: 180,
                    x: side === 'left' ? 150 : this.canvas.width - 150,
                    y: (this.canvas.height / 2) - 35,
                    score: 0,
                    move: DIRECTION.IDLE,
                    speed: 10
                };
            }
        };

        var Ball = {
            create: function (incrementedSpeed) {
                return {
                    width: 18,
                    height: 18,
                    x: (this.canvas.width / 2) - 9,
                    y: (this.canvas.height / 2) - 9,
                    moveX: DIRECTION.IDLE,
                    moveY: DIRECTION.IDLE,
                    speed: incrementedSpeed || 3
                };
            }
        };

        var Game = {
            initialize: function () {
                this.canvas = document.querySelector('canvas');
                this.context = this.canvas.getContext('2d');

                this.canvas.width = 1400;
                this.canvas.height = 1000;

                this.canvas.style.width = (this.canvas.width / 2) + 'px';
                this.canvas.style.height = (this.canvas.height / 2) + 'px';

                this.player = Paddle.create.call(this, 'left');
                this.ai = Paddle.create.call(this, 'right');
                this.ball = Ball.create.call(this);

                this.ai.speed = 4;
                this.running = this.over = false;
                this.turn = this.ai;
                this.timer = this.round = 0;
                this.color = '#e74c3c';

                this.menu();
                this.listen();
            },

            endGameMenu: function (text) {
                // Change the canvas font size and color
                this.context.font = '45px Courier New';
                this.context.fillStyle = this.color;

                // Draw the rectangle behind the 'Press any key to begin' text.
                this.context.fillRect(
                    this.canvas.width / 2 - 350,
                    this.canvas.height / 2 - 48,
                    700,
                    100
                );

                // Change the canvas color;
                this.context.fillStyle = '#ffffff';

                // Draw the end game menu text ('Game Over' and 'Winner')
                this.context.fillText(text,
                    this.canvas.width / 2,
                    this.canvas.height / 2 + 15
                );

                setTimeout(function () {
                    Pong = Object.assign({}, Game);
                    Pong.initialize();
                }, 3000);
            },

            menu: function () {
                // Draw all the Pong objects in their current state
                this.draw();

                // Change the canvas font size and color
                this.context.font = '50px Courier New';
                this.context.fillStyle = this.color;

                // Draw the rectangle behind the 'Press any key to begin' text.
                this.context.fillRect(
                    this.canvas.width / 2 - 350,
                    this.canvas.height / 2 - 48,
                    700,
                    100
                );

                // Change the canvas color;
                this.context.fillStyle = '#ffffff';

                // Draw the 'press any key to begin' text
                this.context.fillText('Press any key to begin',
                    this.canvas.width / 2,
                    this.canvas.height / 2 + 15
                );
            },

            update: function () {
                if (!this.over) {
                    // ... (the rest of your update code)
                }

                // ... (the rest of your update code)
            },

            draw: function () {
                // ... (the rest of your draw code)
            },

            loop: function () {
                this.update();
                this.draw();

                if (!this.over) requestAnimationFrame(this.loop.bind(this));
            },

            listen: function () {
                document.addEventListener('keydown', function (key) {
                    if (this.running === false) {
                        this.running = true;
                        window.requestAnimationFrame(this.loop.bind(this));
                    }

                    if (key.keyCode === 38 || key.keyCode === 87) this.player.move = DIRECTION.UP;
                    if (key.keyCode === 40 || key.keyCode === 83) this.player.move = DIRECTION.DOWN;
                }.bind(this));

                document.addEventListener('keyup', function (key) { this.player.move = DIRECTION.IDLE; }.bind(this));
            },

            _resetTurn: function (victor, loser) {
                this.ball = Ball.create.call(this, this.ball.speed);
                this.turn = loser;
                this.timer = (new Date()).getTime();

                victor.score++;
            },

            _turnDelayIsOver: function () {
                return ((new Date()).getTime() - this.timer >= 1000);
            },

            _generateRoundColor: function () {
                var newColor = colors[Math.floor(Math.random() * colors.length)];
                if (newColor === this.color) return this._generateRoundColor();
                return newColor;
            }
        };

        var Pong = Object.assign({}, Game);

        document.addEventListener('DOMContentLoaded', function () {
            Pong.initialize();
        });
    </script>
</body>
</html>
